services:
  app:
    build: .
    volumes:
      - .:/usr/src/app  # Mount current directory into container
    command: npm run dev  # Or nodemon, ts-node-dev, etc.

  db:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}

  db-init:
    build: .
    environment:
      MONGO_HOST: db
      MONGO_USER: ${MONGO_ROOT_USER}
      MONGO_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_AUTH_DB_NAME: admin
      MONGO_CREATE_USER: ${MONGO_USER}
      MONGO_CREATE_PASSWORD: ${MONGO_PASSWORD}
    depends_on:
      - db
    restart: on-failure
    command: npm run initdb

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  api:
    build: .
    volumes:
    - .:/usr/src/app
    ports:
      - 8000:8000
    environment:
      MONGO_HOST: db
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    depends_on:
      - db
      - db-init
      - rabbitmq
    restart: on-failure
    command: npm run dev
